# Claude Code Hooks Development

# Default recipe
default: lint test

# Show available recipes
help:
    @echo "Claude Code Hooks Development"
    @echo "============================"
    @echo "Available recipes:"
    @echo "  just lint      - Run shellcheck on all hook scripts"
    @echo "  just test      - Run all test suites (legacy + shellspec)"
    @echo "  just shellspec - Run ShellSpec tests only"
    @echo "  just check     - Run both lint and test"
    @echo "  just clean     - Clean up temporary files"
    @echo "  just help      - Show this help message"
    @echo ""
    @echo "Note: These recipes test locally. To deploy changes:"
    @echo "  1. Commit your changes"
    @echo "  2. Run 'update' to rebuild the NixOS system"

# Lint all shell scripts with shellcheck
lint:
    #!/usr/bin/env bash
    set -euo pipefail
    echo "Running shellcheck on all scripts..."
    echo "===================================="
    failed=0
    for script in *.sh */*.sh; do
        if [[ -f "$script" ]]; then
            echo -n "Checking $script... "
            if shellcheck -x "$script" >/dev/null 2>&1; then
                echo "✅ OK"
            else
                echo "❌ FAILED"
                shellcheck -x "$script"
                failed=1
            fi
        fi
    done
    if [[ $failed -eq 0 ]]; then
        echo ""
        echo "✅ All scripts passed shellcheck!"
    else
        echo ""
        echo "❌ Some scripts failed shellcheck"
        exit 1
    fi

# Run all tests (legacy + shellspec)
test:
    #!/usr/bin/env bash
    set -euo pipefail
    echo "Running all test suites..."
    echo "========================="
    failed=0
    
    # Run legacy tests
    if [[ -d tests ]] && compgen -G "tests/*_spec.sh" > /dev/null 2>&1 || compgen -G "tests/*_test.sh" > /dev/null 2>&1; then
        echo "Running legacy tests..."
        echo "----------------------"
        for test in tests/*_spec.sh tests/*_test.sh; do
            if [[ -f "$test" ]]; then
                echo ""
                echo "Running $test..."
                if bash "$test"; then
                    echo "✅ $test passed"
                else
                    echo "❌ $test failed"
                    failed=1
                fi
            fi
        done
    fi
    
    # Run ShellSpec tests
    if command -v shellspec >/dev/null 2>&1 && [[ -f .shellspec ]]; then
        echo ""
        echo "Running ShellSpec tests..."
        echo "-------------------------"
        if shellspec; then
            echo "✅ ShellSpec tests passed"
        else
            shellspec_exit_code=$?
            if [[ $shellspec_exit_code -eq 127 ]]; then
                echo "⚠️  ShellSpec appears to be broken, skipping tests"
            else
                echo "❌ ShellSpec tests failed"
                failed=1
            fi
        fi
    else
        echo ""
        echo "ShellSpec not found or not configured, skipping ShellSpec tests"
    fi
    
    echo ""
    if [[ $failed -eq 0 ]]; then
        echo "✅ All tests passed!"
    else
        echo "❌ Some tests failed"
        exit 1
    fi

# Run only ShellSpec tests
shellspec:
    #!/usr/bin/env bash
    set -euo pipefail
    if command -v shellspec >/dev/null 2>&1 && [[ -f .shellspec ]]; then
        echo "Running ShellSpec tests..."
        echo "========================="
        shellspec
    else
        echo "❌ ShellSpec not found or .shellspec configuration missing"
        echo ""
        echo "To install ShellSpec:"
        echo "  nix-shell -p shellspec"
        exit 1
    fi

# Run both lint and test
check: lint test

# Clean up temporary files
clean:
    @echo "Cleaning up..."
    @find . -name "*.tmp" -delete
    @find . -name "*.log" -delete
    @echo "✅ Cleaned up temporary files"